##################
#
#  {{ ansible_managed }}
#
##################
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	# SSL
	ssl_certificate /etc/letsencrypt/live/{{ item.value.domain }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ item.value.domain }}/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/{{ item.value.domain }}/fullchain.pem;

	server_name {{ item.value.domain }};

	root {{ item.value.root_dir }};

	{% if item.value.enable_logs|default(true) %}
		error_log /var/log/nginx/{{ item.value.domain }}_error.log;
		access_log /var/log/nginx/{{ item.value.domain }}_access.log;
	{% else %}
		error_log off;
		access_log off;
	{% endif %}

	location / {
	    {% if item.value.htpasswd is defined %}
        	auth_basic "{{ item.value.auth_message|default('Zone réservée') }}";
        	auth_basic_user_file {{ item.value.htpasswd }};
        {% else %}
            auth_basic off;
        {% endif %}
		# try to serve file directly, fallback to index.php
		try_files $uri /index.php$is_args$args;
	}

	location ~ ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|bmp|html|xml|otf|ttf|eot|woff|svg|pdf)$ {
	    auth_basic off;
		try_files $uri @default;
		expires max;
	}

	location @default {
		rewrite ^(.*)$ /index.php/$1 last;
	}

	# PROD
	location ~ ^/index\.php(/|$) {
		{% if item.value.headers is defined %}
			{% for header in item.value.headers %}
			add_header '{{ header.name }}' '{{ header.value }}' always;
			{% endfor %}
		{% endif %}

		fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;

		{% if item.value.cgi_params is defined %}
			{% for param in item.value.cgi_params %}
				fastcgi_param {{ param.name }} {{ param.value }};
			{% endfor %}
		{% endif %}
		fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
		fastcgi_param DOCUMENT_ROOT $realpath_root;
		internal;
	}

	# return 404 for all other php files not matching the front controller
	# this prevents access to other php files you don't want to be accessible.
	location ~ \.php$ {
		return 404;
	}
}

# HTTP redirect
server {
	listen 80;
	listen [::]:80;

	server_name {{ item.value.domain }};

	location / {
		{% if item.value.www_redirect|default(true) %}
		return 301 https://www.{{ item.value.domain }}$request_uri;
		{% else %}
		return 301 https://{{ item.value.domain }}$request_uri;
		{% endif %}
	}
}

{% if item.value.www_redirect|default(false) %}
server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name {{ item.value.domain }};

	location / {
		return 301 https://www.{{ item.value.domain }}$request_uri;
	}
}
{% endif %}
